import { Context } from 'telegraf';
import { UserType } from '../../db/schema/user';
import { ProfileType } from '../../db/schema/profile';
import { BACK_TEXT } from '../../utils';

export function profileText(profile: ProfileType, user: UserType) {
	return `üì∞  –¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å  ‚åµ

üë§ –ò–º—è: <b><i>${profile.name}</i></b>
üèÆ –í–æ–∑—Ä–∞—Å—Ç: <b><i>${profile.age}</i></b>
üåç –ì–æ—Ä–æ–¥: <b><i>${profile.city}</i></b>
ü©∏ –ö–∞—Ä–º–∞: <b><i>${user.karma}</i></b>

‚úçÔ∏è –û —Å–µ–±–µ: ${profile.aboutMe ? `<blockquote>${profile.aboutMe}</blockquote>` : '<i>–ù–µ —É–∫–∞–∑–∞–Ω–æ</i>'}`;
}

export async function myProfileMessage(ctx: Context, user: UserType, profile: ProfileType) {
	if (ctx.callbackQuery) await ctx.answerCbQuery();
	await ctx.sendMediaGroup(
		profile.photo.map((photo, index) => ({
			type: 'photo',
			media: photo,
			caption: index === 0 ? profileText(profile, user) : undefined,
			parse_mode: 'HTML',
		}))
	);

	return await ctx.reply('–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:', {
		parse_mode: 'HTML',
		reply_markup: {
			inline_keyboard: [[{ text: '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å', callback_data: 'edit_profile' }], [{ text: BACK_TEXT, callback_data: 'menu' }]],
		},
	});
}
